@page "/clients/{name}"

@using C1CopyMudBlazor.Pages.Legals
@using C1CopyMudBlazor.Pages.Offices
@using C1CopyMudBlazor.Pages.Teches

@inject ApplicationContext db
@attribute [Authorize(Roles = "admin")]

@if (client == null)
{
    return;
}
<PageTitle>Клиент - @name</PageTitle>
<AuthorizeView>
    @if ((context.User.IsInRole($"{name}") && context.User.IsInRole("admin")) || context.User.IsInRole("itbox"))
    {
        <MudGrid>
            <MudItem xs="12">
                <MudBreadcrumbs Items="_items"/>
            </MudItem>
            <MudItem xs="12">
                <MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" ActivePanelIndex="@Tabid">
                    <MudTabPanel Text="Сотрудники">
                        <ClientEmployees name="@name" ID="@ID"/>
                    </MudTabPanel>

                    <MudTabPanel Text="Офисы">
                        <ClientOffices ID="@ID" name="@name"></ClientOffices>
                    </MudTabPanel>
                    <MudTabPanel Text="Техника" Disabled="false">
                        <ClientTechTable id="@ID"/>
                    </MudTabPanel>
                    <MudTabPanel Text="Юр. Лица">
                        <Legal name=@($"{name}") ID="@ID"></Legal>
                    </MudTabPanel>


                    <MudTabPanel Text="Tab Disabled" Disabled="true">
                        <MudText>Content Disabled</MudText>
                    </MudTabPanel>
                </MudTabs>
            </MudItem>
        </MudGrid>
    }

</AuthorizeView>


@code {

    [Parameter]
    public string? name { get; set; }

    [Parameter]
    [SupplyParameterFromQuery]
    public int Tabid { get; set; }

    private static Client? client { get; set; }
    private int ID { get; set; }

    private readonly IConfiguration _configuration;
    private List<BreadcrumbItem> _items;

    protected override async Task OnInitializedAsync()
    {
        _items = new List<BreadcrumbItem>
        {
            new BreadcrumbItem("Clients", href: "clients", icon: Icons.Material.Filled.Home),
            new BreadcrumbItem($"{name}", href: null, disabled: true, icon: Icons.Material.Filled.Create),
        };
        client = db.Clients.FirstOrDefault(c => c.Name == name);
        if (client != null)
        {
            ID = client.ID;
        }
    }

    protected override async Task OnParametersSetAsync()
    {
        OnInitializedAsync();
    }

}